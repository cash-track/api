name: build-base

on:
  workflow_dispatch:
    inputs:
      baseImageTag:
        description: 'semver image tag (1.0.0)'
        type: string
        required: true

env:
  REGISTRY: docker.io
  REPO: cashtrack/base-php

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write
      attestations: write

    steps:
      - name: Setup Workspace
        run: git config --global --add safe.directory $GITHUB_WORKSPACE

      - name: Checkout repository
        if: github.event_name != 'pull_request'
        uses: actions/checkout@v4

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Login to Docker Hub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USER }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        if: github.event_name != 'pull_request'
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REPO }}

      # Setup BuildX
      # https://github.com/docker/setup-buildx-action
      - name: Setup BuildX
        uses: docker/setup-buildx-action@v3
        id: buildx
        with:
          install: true

      # Build and push Docker image with Build (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push
        uses: docker/build-push-action@v6
        id: push
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: |
            ${{ env.REPO }}:${{ github.sha }}
            ${{ env.REPO }}:${{ inputs.baseImageTag }}
            ${{ env.REPO }}:latest
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=registry,ref=${{ env.REPO }}:latest
          cache-to: type=registry,ref=${{ env.REPO }}:latest,mode=max
          build-args: |
            GIT_COMMIT=${{ github.sha }}
            GIT_TAG=${{ github.ref_name }}

      - name: Attest
        uses: actions/attest-build-provenance@v1
        id: attest
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.REPO }}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true
